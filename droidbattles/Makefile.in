# KDE tags expanded automatically by am_edit - $Revision: 1.154 $ 
# Makefile.in generated automatically by automake 1.4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

####### kdevelop will overwrite this part!!! (begin)##########


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
#>- 
bindir = @bindir@
#>+ 3
DEPDIR = .deps

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@
AS = @AS@
AUTODIRS = @AUTODIRS@
CC = @CC@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DLLTOOL = @DLLTOOL@
DPMSINC = @DPMSINC@
DPMSLIB = @DPMSLIB@
EXEEXT = @EXEEXT@
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = @GMSGFMT@
IDL = @IDL@
IDL_DEPENDENCIES = @IDL_DEPENDENCIES@
KDE_CXXFLAGS = @KDE_CXXFLAGS@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBMICO = @LIBMICO@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTIFF = @LIBTIFF@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDEUI = @LIB_KDEUI@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KFORMULA = @LIB_KFORMULA@
LIB_KHTML = @LIB_KHTML@
LIB_KIMGIO = @LIB_KIMGIO@
LIB_KIO = @LIB_KIO@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_MEDIATOOL = @LIB_MEDIATOOL@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
MICO_INCLUDES = @MICO_INCLUDES@
MICO_LDFLAGS = @MICO_LDFLAGS@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
NOREPO = @NOREPO@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PAMINC = @PAMINC@
PAMLIBPATHS = @PAMLIBPATHS@
PAMLIBS = @PAMLIBS@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
REPO = @REPO@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_NLS = @USE_NLS@
USE_RTTI = @USE_RTTI@
VERSION = @VERSION@
XGETTEXT = @XGETTEXT@
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
all_includes = @all_includes@
all_libraries = @all_libraries@
idldir = @idldir@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_cgidir = @kde_cgidir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_libraries = @kde_libraries@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_minidir = @kde_minidir@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_toolbardir = @kde_toolbardir@
kde_wallpaperdir = @kde_wallpaperdir@
micodir = @micodir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
x_includes = @x_includes@
x_libraries = @x_libraries@

bin_PROGRAMS = battlebots
battlebots_SOURCES = pixmapholder.cpp pixbutton.cpp infobox.cpp cloaker.cpp chiller.cpp docbrowser.cpp startdeathbatt.cpp startsurvbatt.cpp startcup.cpp scandetect.cpp chaff.cpp chafflauncher.cpp debugwindow.cpp kothtournament.cpp rocket.cpp rocketlauncher.cpp beam.cpp beamer.cpp quickconf.cpp installdir.cpp turret.cpp timedev.cpp steering.cpp starttournament.cpp startsbatt.cpp shield.cpp screenobject.cpp scanner.cpp robots.cpp robcpu.cpp repair.cpp ram.cpp radarmissilelauncher.cpp radarmissile.cpp plasma.cpp missile.cpp minelayer.cpp mine.cpp instruktion.cpp fuel.cpp explosion.cpp engine.cpp device.cpp devchoice.cpp createbot.cpp cpu.cpp confedit.cpp communication.cpp botinfo.cpp battlearea.cpp armor.cpp battlebots.cpp main.cpp 
battlebots_LDADD = $(LIB_QT) -lm -lXext -lX11 $(LIBSOCKET)

SUBDIRS = docs 

EXTRA_DIST = main.cpp battlebots.cpp resource.h battlebots.xpm mini-battlebots.xpm armor.cpp armor.h battlearea.cpp battlearea.h battlebots.h botinfo.cpp botinfo.h commonsymbols.h communication.cpp communication.h confedit.cpp confedit.h confstruct.h cpu.cpp cpu.h createbot.cpp createbot.h current.cfg devchoice.cpp devchoice.h device.cpp device.h engine.cpp engine.h explosion.cpp explosion.h fuel.cpp fuel.h heavy.cfg instruktion.cpp instruktion.h light.cfg medium.cfg mine.cpp mine.h mine.xpm minelayer.cpp minelayer.h missile.cpp missile.h missile.xpm plasma.cpp plasma.h radarmissile.cpp radarmissile.h radarmissilelauncher.cpp radarmissilelauncher.h ram.cpp ram.h repair.cpp repair.h robcpu.cpp robcpu.h robots.cpp robots.h scanner.cpp scanner.h screenobject.cpp screenobject.h shield.cpp shield.h startsbatt.cpp startsbatt.h starttournament.cpp starttournament.h steering.cpp steering.h timedev.cpp timedev.h turret.cpp turret.h ultralight.cfg battlebots.conf installdir.cpp installdir.h quickconf.cpp quickconf.h beamer.cpp beamer.h beam.cpp beam.h radarmissile.bmp rocketlauncher.cpp rocketlauncher.h rocket.cpp rocket.h kothtournament.cpp kothtournament.h matchresult.h debugcontents.h debugwindow.cpp debugwindow.h chafflauncher.cpp chafflauncher.h chaff.cpp chaff.h chaff.bmp scandetect.cpp scandetect.h startcup.cpp startcup.h startsurvbatt.cpp startsurvbatt.h startdeathbatt.cpp startdeathbatt.h docbrowser.cpp docbrowser.h skepp0.bmp skepp1.bmp skepp2.bmp skepp3.bmp skepp4.bmp skepp5.bmp skepp6.bmp skepp7.bmp chiller.cpp chiller.h cloaker.cpp cloaker.h BUGS mainmenu.png infobox.cpp infobox.h pixbutton.cpp pixbutton.h pixmapholder.cpp pixmapholder.h example1.basm metal.png metalback2.png backbutton.xpm sourceguide.txt index-14.html teamtracker.basm 

####### kdevelop will overwrite this part!!! (end)############

# set the include path for X, qt and KDE
INCLUDES = $(all_includes)

#>- battlebots_METASOURCES = AUTO

# the library search path. 
battlebots_LDFLAGS = $(all_libraries) 

# them while "make clean", use CLEANFILES
DISTCLEANFILES = $(battlebots_METASOURCES)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
bin_PROGRAMS =  battlebots$(EXEEXT)
PROGRAMS =  $(bin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
#>- battlebots_OBJECTS =  pixmapholder.$(OBJEXT) pixbutton.$(OBJEXT) \
#>- infobox.$(OBJEXT) cloaker.$(OBJEXT) chiller.$(OBJEXT) \
#>- docbrowser.$(OBJEXT) startdeathbatt.$(OBJEXT) startsurvbatt.$(OBJEXT) \
#>- startcup.$(OBJEXT) scandetect.$(OBJEXT) chaff.$(OBJEXT) \
#>- chafflauncher.$(OBJEXT) debugwindow.$(OBJEXT) kothtournament.$(OBJEXT) \
#>- rocket.$(OBJEXT) rocketlauncher.$(OBJEXT) beam.$(OBJEXT) \
#>- beamer.$(OBJEXT) quickconf.$(OBJEXT) installdir.$(OBJEXT) \
#>- turret.$(OBJEXT) timedev.$(OBJEXT) steering.$(OBJEXT) \
#>- starttournament.$(OBJEXT) startsbatt.$(OBJEXT) shield.$(OBJEXT) \
#>- screenobject.$(OBJEXT) scanner.$(OBJEXT) robots.$(OBJEXT) \
#>- robcpu.$(OBJEXT) repair.$(OBJEXT) ram.$(OBJEXT) \
#>- radarmissilelauncher.$(OBJEXT) radarmissile.$(OBJEXT) plasma.$(OBJEXT) \
#>- missile.$(OBJEXT) minelayer.$(OBJEXT) mine.$(OBJEXT) \
#>- instruktion.$(OBJEXT) fuel.$(OBJEXT) explosion.$(OBJEXT) \
#>- engine.$(OBJEXT) device.$(OBJEXT) devchoice.$(OBJEXT) \
#>- createbot.$(OBJEXT) cpu.$(OBJEXT) confedit.$(OBJEXT) \
#>- communication.$(OBJEXT) botinfo.$(OBJEXT) battlearea.$(OBJEXT) \
#>- armor.$(OBJEXT) battlebots.$(OBJEXT) main.$(OBJEXT)
#>+ 21
@KDE_USE_FINAL_FALSE@battlebots_OBJECTS = pixmapholder.$(OBJEXT) pixbutton.$(OBJEXT) \
infobox.$(OBJEXT) cloaker.$(OBJEXT) chiller.$(OBJEXT) \
docbrowser.$(OBJEXT) startdeathbatt.$(OBJEXT) startsurvbatt.$(OBJEXT) \
startcup.$(OBJEXT) scandetect.$(OBJEXT) chaff.$(OBJEXT) \
chafflauncher.$(OBJEXT) debugwindow.$(OBJEXT) kothtournament.$(OBJEXT) \
rocket.$(OBJEXT) rocketlauncher.$(OBJEXT) beam.$(OBJEXT) \
beamer.$(OBJEXT) quickconf.$(OBJEXT) installdir.$(OBJEXT) \
turret.$(OBJEXT) timedev.$(OBJEXT) steering.$(OBJEXT) \
starttournament.$(OBJEXT) startsbatt.$(OBJEXT) shield.$(OBJEXT) \
screenobject.$(OBJEXT) scanner.$(OBJEXT) robots.$(OBJEXT) \
robcpu.$(OBJEXT) repair.$(OBJEXT) ram.$(OBJEXT) \
radarmissilelauncher.$(OBJEXT) radarmissile.$(OBJEXT) plasma.$(OBJEXT) \
missile.$(OBJEXT) minelayer.$(OBJEXT) mine.$(OBJEXT) \
instruktion.$(OBJEXT) fuel.$(OBJEXT) explosion.$(OBJEXT) \
engine.$(OBJEXT) device.$(OBJEXT) devchoice.$(OBJEXT) \
createbot.$(OBJEXT) cpu.$(OBJEXT) confedit.$(OBJEXT) \
communication.$(OBJEXT) botinfo.$(OBJEXT) battlearea.$(OBJEXT) \
armor.$(OBJEXT) battlebots.$(OBJEXT) main.$(OBJEXT)\
createbot.moc.o quickconf.moc.o confedit.moc.o kothtournament.moc.o startsbatt.moc.o starttournament.moc.o robots.moc.o battlebots.moc.o screenobject.moc.o botinfo.moc.o debugwindow.moc.o battlearea.moc.o devchoice.moc.o 
@KDE_USE_FINAL_TRUE@battlebots_OBJECTS = battlebots.all_cpp.o 
battlebots_final_OBJECTS = battlebots.all_cpp.o 
battlebots_DEPENDENCIES = 
CXXFLAGS = @CXXFLAGS@
#>- CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 1
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 1
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
#>+ 1
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
SOURCES = $(battlebots_SOURCES)
OBJECTS = $(battlebots_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cpp .lo .o .obj .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
#>- 	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps battlebots/Makefile
#>+ 2
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps battlebots/Makefile
	cd $(top_srcdir) && perl am_edit battlebots-1.0.0/battlebots/Makefile.in

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

battlebots$(EXEEXT): $(battlebots_OBJECTS) $(battlebots_DEPENDENCIES)
	@rm -f battlebots$(EXEEXT)
	$(CXXLINK) $(battlebots_LDFLAGS) $(battlebots_OBJECTS) $(battlebots_LDADD) $(LIBS)
.cpp.o:
	$(CXXCOMPILE) -c $<
.cpp.obj:
	$(CXXCOMPILE) -c `cygpath -w $<`
.cpp.lo:
	$(LTCXXCOMPILE) -c $<

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.

@SET_MAKE@

#>- all-recursive install-data-recursive install-exec-recursive \
#>- installdirs-recursive install-recursive uninstall-recursive  \
#>- check-recursive installcheck-recursive info-recursive dvi-recursive:
#>+ 3
all-recursive install-data-recursive install-exec-recursive \
installdirs-recursive install-recursive uninstall-recursive  \
check-recursive installcheck-recursive info-recursive dvi-recursive docs-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	rev=''; list='$(SUBDIRS)'; for subdir in $$list; do \
	  rev="$$subdir $$rev"; \
	  test "$$subdir" = "." && dot_seen=yes; \
	done; \
	test "$$dot_seen" = "no" && rev=". $$rev"; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
   if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
   fi; \
	done; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = battlebots

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	for subdir in $(SUBDIRS); do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    chmod 777 $(distdir)/$$subdir; \
	    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(top_distdir) distdir=../$(distdir)/$$subdir distdir) \
	      || exit 1; \
	  fi; \
	done
armor.o: armor.cpp armor.h device.h screenobject.h commonsymbols.h \
	debugcontents.h
battlearea.o: battlearea.cpp battlearea.h screenobject.h commonsymbols.h \
	debugcontents.h botinfo.h confstruct.h pixbutton.h \
	pixmapholder.h ram.h debugwindow.h robots.h device.h robcpu.h \
	cpu.h engine.h steering.h plasma.h armor.h scanner.h fuel.h \
	turret.h timedev.h shield.h repair.h communication.h \
	minelayer.h beamer.h rocketlauncher.h chafflauncher.h \
	installdir.h radarmissilelauncher.h scandetect.h chiller.h \
	cloaker.h mine.h radarmissile.h missile.h beam.h rocket.h \
	chaff.h explosion.h
battlearea.moc.o: battlearea.moc.cpp battlearea.h screenobject.h \
	commonsymbols.h debugcontents.h botinfo.h confstruct.h \
	pixbutton.h pixmapholder.h ram.h debugwindow.h robots.h \
	device.h robcpu.h cpu.h engine.h steering.h plasma.h armor.h \
	scanner.h fuel.h turret.h timedev.h shield.h repair.h \
	communication.h minelayer.h beamer.h rocketlauncher.h \
	chafflauncher.h installdir.h radarmissilelauncher.h \
	scandetect.h chiller.h cloaker.h mine.h radarmissile.h \
	missile.h beam.h rocket.h chaff.h explosion.h
battlebots.o: battlebots.cpp battlebots.h resource.h ../config.h \
	createbot.h commonsymbols.h instruktion.h battlearea.h \
	screenobject.h debugcontents.h botinfo.h confstruct.h \
	pixbutton.h pixmapholder.h ram.h debugwindow.h robots.h \
	device.h robcpu.h cpu.h engine.h steering.h plasma.h armor.h \
	scanner.h fuel.h turret.h timedev.h shield.h repair.h \
	communication.h minelayer.h beamer.h rocketlauncher.h \
	chafflauncher.h installdir.h radarmissilelauncher.h \
	scandetect.h chiller.h cloaker.h mine.h radarmissile.h \
	missile.h beam.h rocket.h chaff.h explosion.h quickconf.h \
	startsbatt.h devchoice.h infobox.h startsurvbatt.h \
	startdeathbatt.h confedit.h starttournament.h kothtournament.h \
	matchresult.h startcup.h docbrowser.h
battlebots.moc.o: battlebots.moc.cpp battlebots.h resource.h ../config.h \
	createbot.h commonsymbols.h instruktion.h battlearea.h \
	screenobject.h debugcontents.h botinfo.h confstruct.h \
	pixbutton.h pixmapholder.h ram.h debugwindow.h robots.h \
	device.h robcpu.h cpu.h engine.h steering.h plasma.h armor.h \
	scanner.h fuel.h turret.h timedev.h shield.h repair.h \
	communication.h minelayer.h beamer.h rocketlauncher.h \
	chafflauncher.h installdir.h radarmissilelauncher.h \
	scandetect.h chiller.h cloaker.h mine.h radarmissile.h \
	missile.h beam.h rocket.h chaff.h explosion.h quickconf.h \
	startsbatt.h devchoice.h infobox.h startsurvbatt.h \
	startdeathbatt.h confedit.h starttournament.h kothtournament.h \
	matchresult.h startcup.h docbrowser.h
beam.o: beam.cpp beam.h screenobject.h commonsymbols.h debugcontents.h \
	battlearea.h botinfo.h confstruct.h pixbutton.h pixmapholder.h \
	ram.h debugwindow.h robots.h device.h robcpu.h cpu.h engine.h \
	steering.h plasma.h armor.h scanner.h fuel.h turret.h timedev.h \
	shield.h repair.h communication.h minelayer.h beamer.h \
	rocketlauncher.h chafflauncher.h installdir.h \
	radarmissilelauncher.h scandetect.h chiller.h cloaker.h mine.h \
	radarmissile.h missile.h rocket.h chaff.h explosion.h
beamer.o: beamer.cpp beamer.h device.h screenobject.h commonsymbols.h \
	debugcontents.h
botinfo.o: botinfo.cpp botinfo.h screenobject.h commonsymbols.h \
	debugcontents.h
botinfo.moc.o: botinfo.moc.cpp botinfo.h screenobject.h commonsymbols.h \
	debugcontents.h
chaff.o: chaff.cpp chaff.h screenobject.h commonsymbols.h \
	debugcontents.h battlearea.h botinfo.h confstruct.h pixbutton.h \
	pixmapholder.h ram.h debugwindow.h robots.h device.h robcpu.h \
	cpu.h engine.h steering.h plasma.h armor.h scanner.h fuel.h \
	turret.h timedev.h shield.h repair.h communication.h \
	minelayer.h beamer.h rocketlauncher.h chafflauncher.h \
	installdir.h radarmissilelauncher.h scandetect.h chiller.h \
	cloaker.h mine.h radarmissile.h missile.h beam.h rocket.h \
	explosion.h
chafflauncher.o: chafflauncher.cpp chafflauncher.h device.h \
	screenobject.h commonsymbols.h debugcontents.h
chiller.o: chiller.cpp chiller.h device.h screenobject.h commonsymbols.h \
	debugcontents.h
cloaker.o: cloaker.cpp cloaker.h device.h screenobject.h commonsymbols.h \
	debugcontents.h
communication.o: communication.cpp communication.h device.h \
	screenobject.h commonsymbols.h debugcontents.h
confedit.o: confedit.cpp confedit.h installdir.h
confedit.moc.o: confedit.moc.cpp confedit.h installdir.h
cpu.o: cpu.cpp cpu.h ram.h screenobject.h commonsymbols.h \
	debugcontents.h device.h
createbot.o: createbot.cpp createbot.h commonsymbols.h instruktion.h \
	battlearea.h screenobject.h debugcontents.h botinfo.h \
	confstruct.h pixbutton.h pixmapholder.h ram.h debugwindow.h \
	robots.h device.h robcpu.h cpu.h engine.h steering.h plasma.h \
	armor.h scanner.h fuel.h turret.h timedev.h shield.h repair.h \
	communication.h minelayer.h beamer.h rocketlauncher.h \
	chafflauncher.h installdir.h radarmissilelauncher.h \
	scandetect.h chiller.h cloaker.h mine.h radarmissile.h \
	missile.h beam.h rocket.h chaff.h explosion.h quickconf.h \
	startsbatt.h devchoice.h infobox.h
createbot.moc.o: createbot.moc.cpp createbot.h commonsymbols.h \
	instruktion.h battlearea.h screenobject.h debugcontents.h \
	botinfo.h confstruct.h pixbutton.h pixmapholder.h ram.h \
	debugwindow.h robots.h device.h robcpu.h cpu.h engine.h \
	steering.h plasma.h armor.h scanner.h fuel.h turret.h timedev.h \
	shield.h repair.h communication.h minelayer.h beamer.h \
	rocketlauncher.h chafflauncher.h installdir.h \
	radarmissilelauncher.h scandetect.h chiller.h cloaker.h mine.h \
	radarmissile.h missile.h beam.h rocket.h chaff.h explosion.h \
	quickconf.h startsbatt.h devchoice.h infobox.h
debugwindow.o: debugwindow.cpp debugwindow.h debugcontents.h
debugwindow.moc.o: debugwindow.moc.cpp debugwindow.h debugcontents.h
devchoice.o: devchoice.cpp devchoice.h confstruct.h commonsymbols.h \
	createbot.h instruktion.h battlearea.h screenobject.h \
	debugcontents.h botinfo.h pixbutton.h pixmapholder.h ram.h \
	debugwindow.h robots.h device.h robcpu.h cpu.h engine.h \
	steering.h plasma.h armor.h scanner.h fuel.h turret.h timedev.h \
	shield.h repair.h communication.h minelayer.h beamer.h \
	rocketlauncher.h chafflauncher.h installdir.h \
	radarmissilelauncher.h scandetect.h chiller.h cloaker.h mine.h \
	radarmissile.h missile.h beam.h rocket.h chaff.h explosion.h \
	quickconf.h startsbatt.h infobox.h
devchoice.moc.o: devchoice.moc.cpp devchoice.h confstruct.h \
	commonsymbols.h createbot.h instruktion.h battlearea.h \
	screenobject.h debugcontents.h botinfo.h pixbutton.h \
	pixmapholder.h ram.h debugwindow.h robots.h device.h robcpu.h \
	cpu.h engine.h steering.h plasma.h armor.h scanner.h fuel.h \
	turret.h timedev.h shield.h repair.h communication.h \
	minelayer.h beamer.h rocketlauncher.h chafflauncher.h \
	installdir.h radarmissilelauncher.h scandetect.h chiller.h \
	cloaker.h mine.h radarmissile.h missile.h beam.h rocket.h \
	chaff.h explosion.h quickconf.h startsbatt.h infobox.h
device.o: device.cpp device.h screenobject.h commonsymbols.h \
	debugcontents.h
docbrowser.o: docbrowser.cpp docbrowser.h installdir.h
engine.o: engine.cpp engine.h device.h screenobject.h commonsymbols.h \
	debugcontents.h
explosion.o: explosion.cpp explosion.h screenobject.h commonsymbols.h \
	debugcontents.h battlearea.h botinfo.h confstruct.h pixbutton.h \
	pixmapholder.h ram.h debugwindow.h robots.h device.h robcpu.h \
	cpu.h engine.h steering.h plasma.h armor.h scanner.h fuel.h \
	turret.h timedev.h shield.h repair.h communication.h \
	minelayer.h beamer.h rocketlauncher.h chafflauncher.h \
	installdir.h radarmissilelauncher.h scandetect.h chiller.h \
	cloaker.h mine.h radarmissile.h missile.h beam.h rocket.h \
	chaff.h
fuel.o: fuel.cpp fuel.h device.h screenobject.h commonsymbols.h \
	debugcontents.h
infobox.o: infobox.cpp infobox.h
installdir.o: installdir.cpp installdir.h
instruktion.o: instruktion.cpp instruktion.h
kothtournament.o: kothtournament.cpp kothtournament.h pixbutton.h \
	pixmapholder.h
kothtournament.moc.o: kothtournament.moc.cpp kothtournament.h \
	pixbutton.h pixmapholder.h
main.o: main.cpp battlebots.h resource.h ../config.h createbot.h \
	commonsymbols.h instruktion.h battlearea.h screenobject.h \
	debugcontents.h botinfo.h confstruct.h pixbutton.h \
	pixmapholder.h ram.h debugwindow.h robots.h device.h robcpu.h \
	cpu.h engine.h steering.h plasma.h armor.h scanner.h fuel.h \
	turret.h timedev.h shield.h repair.h communication.h \
	minelayer.h beamer.h rocketlauncher.h chafflauncher.h \
	installdir.h radarmissilelauncher.h scandetect.h chiller.h \
	cloaker.h mine.h radarmissile.h missile.h beam.h rocket.h \
	chaff.h explosion.h quickconf.h startsbatt.h devchoice.h \
	infobox.h startsurvbatt.h startdeathbatt.h confedit.h \
	starttournament.h kothtournament.h matchresult.h startcup.h \
	docbrowser.h
mine.o: mine.cpp mine.h screenobject.h commonsymbols.h debugcontents.h \
	battlearea.h botinfo.h confstruct.h pixbutton.h pixmapholder.h \
	ram.h debugwindow.h robots.h device.h robcpu.h cpu.h engine.h \
	steering.h plasma.h armor.h scanner.h fuel.h turret.h timedev.h \
	shield.h repair.h communication.h minelayer.h beamer.h \
	rocketlauncher.h chafflauncher.h installdir.h \
	radarmissilelauncher.h scandetect.h chiller.h cloaker.h \
	radarmissile.h missile.h beam.h rocket.h chaff.h explosion.h
minelayer.o: minelayer.cpp minelayer.h device.h screenobject.h \
	commonsymbols.h debugcontents.h
missile.o: missile.cpp missile.h screenobject.h commonsymbols.h \
	debugcontents.h battlearea.h botinfo.h confstruct.h pixbutton.h \
	pixmapholder.h ram.h debugwindow.h robots.h device.h robcpu.h \
	cpu.h engine.h steering.h plasma.h armor.h scanner.h fuel.h \
	turret.h timedev.h shield.h repair.h communication.h \
	minelayer.h beamer.h rocketlauncher.h chafflauncher.h \
	installdir.h radarmissilelauncher.h scandetect.h chiller.h \
	cloaker.h mine.h radarmissile.h beam.h rocket.h chaff.h \
	explosion.h
pixbutton.o: pixbutton.cpp pixbutton.h pixmapholder.h
pixmapholder.o: pixmapholder.cpp pixmapholder.h
plasma.o: plasma.cpp plasma.h device.h screenobject.h commonsymbols.h \
	debugcontents.h
quickconf.o: quickconf.cpp quickconf.h startsbatt.h commonsymbols.h \
	pixmapholder.h pixbutton.h
quickconf.moc.o: quickconf.moc.cpp quickconf.h startsbatt.h \
	commonsymbols.h pixmapholder.h pixbutton.h
radarmissile.o: radarmissile.cpp radarmissile.h screenobject.h \
	commonsymbols.h debugcontents.h battlearea.h botinfo.h \
	confstruct.h pixbutton.h pixmapholder.h ram.h debugwindow.h \
	robots.h device.h robcpu.h cpu.h engine.h steering.h plasma.h \
	armor.h scanner.h fuel.h turret.h timedev.h shield.h repair.h \
	communication.h minelayer.h beamer.h rocketlauncher.h \
	chafflauncher.h installdir.h radarmissilelauncher.h \
	scandetect.h chiller.h cloaker.h mine.h missile.h beam.h \
	rocket.h chaff.h explosion.h
radarmissilelauncher.o: radarmissilelauncher.cpp radarmissilelauncher.h \
	device.h screenobject.h commonsymbols.h debugcontents.h ram.h
ram.o: ram.cpp ram.h
repair.o: repair.cpp repair.h device.h screenobject.h commonsymbols.h \
	debugcontents.h
robcpu.o: robcpu.cpp robcpu.h cpu.h ram.h screenobject.h commonsymbols.h \
	debugcontents.h device.h
robots.o: robots.cpp robots.h screenobject.h commonsymbols.h \
	debugcontents.h battlearea.h botinfo.h confstruct.h pixbutton.h \
	pixmapholder.h ram.h debugwindow.h mine.h installdir.h \
	radarmissile.h robcpu.h cpu.h device.h steering.h scanner.h \
	missile.h beam.h rocket.h chaff.h explosion.h engine.h plasma.h \
	armor.h fuel.h turret.h timedev.h shield.h repair.h \
	communication.h minelayer.h beamer.h rocketlauncher.h \
	chafflauncher.h radarmissilelauncher.h scandetect.h chiller.h \
	cloaker.h
robots.moc.o: robots.moc.cpp robots.h screenobject.h commonsymbols.h \
	debugcontents.h battlearea.h botinfo.h confstruct.h pixbutton.h \
	pixmapholder.h ram.h debugwindow.h mine.h installdir.h \
	radarmissile.h robcpu.h cpu.h device.h steering.h scanner.h \
	missile.h beam.h rocket.h chaff.h explosion.h engine.h plasma.h \
	armor.h fuel.h turret.h timedev.h shield.h repair.h \
	communication.h minelayer.h beamer.h rocketlauncher.h \
	chafflauncher.h radarmissilelauncher.h scandetect.h chiller.h \
	cloaker.h
rocket.o: rocket.cpp rocket.h screenobject.h commonsymbols.h \
	debugcontents.h battlearea.h botinfo.h confstruct.h pixbutton.h \
	pixmapholder.h ram.h debugwindow.h robots.h device.h robcpu.h \
	cpu.h engine.h steering.h plasma.h armor.h scanner.h fuel.h \
	turret.h timedev.h shield.h repair.h communication.h \
	minelayer.h beamer.h rocketlauncher.h chafflauncher.h \
	installdir.h radarmissilelauncher.h scandetect.h chiller.h \
	cloaker.h mine.h radarmissile.h missile.h beam.h chaff.h \
	explosion.h
rocketlauncher.o: rocketlauncher.cpp rocketlauncher.h screenobject.h \
	commonsymbols.h debugcontents.h device.h
scandetect.o: scandetect.cpp scandetect.h device.h screenobject.h \
	commonsymbols.h debugcontents.h
scanner.o: scanner.cpp scanner.h device.h screenobject.h commonsymbols.h \
	debugcontents.h
screenobject.o: screenobject.cpp screenobject.h commonsymbols.h \
	debugcontents.h
screenobject.moc.o: screenobject.moc.cpp screenobject.h commonsymbols.h \
	debugcontents.h
shield.o: shield.cpp shield.h device.h screenobject.h commonsymbols.h \
	debugcontents.h
startcup.o: startcup.cpp startcup.h starttournament.h
startdeathbatt.o: startdeathbatt.cpp startdeathbatt.h startsurvbatt.h \
	startsbatt.h commonsymbols.h pixmapholder.h pixbutton.h
startsbatt.o: startsbatt.cpp startsbatt.h commonsymbols.h pixmapholder.h \
	pixbutton.h
startsbatt.moc.o: startsbatt.moc.cpp startsbatt.h commonsymbols.h \
	pixmapholder.h pixbutton.h
startsurvbatt.o: startsurvbatt.cpp startsurvbatt.h startsbatt.h \
	commonsymbols.h pixmapholder.h pixbutton.h
starttournament.o: starttournament.cpp starttournament.h
starttournament.moc.o: starttournament.moc.cpp starttournament.h
steering.o: steering.cpp steering.h device.h screenobject.h \
	commonsymbols.h debugcontents.h
timedev.o: timedev.cpp timedev.h device.h screenobject.h commonsymbols.h \
	debugcontents.h
turret.o: turret.cpp turret.h device.h screenobject.h commonsymbols.h \
	debugcontents.h

info-am:
info: info-recursive
dvi-am:
dvi: dvi-recursive
check-am: all-am
check: check-recursive
installcheck-am:
installcheck: installcheck-recursive
install-exec-am: install-binPROGRAMS
install-exec: install-exec-recursive

install-data-am: install-data-local
install-data: install-data-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-recursive
uninstall-am: uninstall-binPROGRAMS uninstall-local
uninstall: uninstall-recursive
all-am: Makefile $(PROGRAMS)
all-redirect: all-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-recursive

#>- clean-am:  clean-binPROGRAMS clean-compile clean-libtool clean-tags \
#>- 		clean-generic mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-final   clean-binPROGRAMS clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

distclean-am:  distclean-binPROGRAMS distclean-compile distclean-libtool \
		distclean-tags distclean-generic clean-am
	-rm -f libtool

distclean: distclean-recursive

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-recursive

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool install-data-recursive \
uninstall-data-recursive install-exec-recursive \
uninstall-exec-recursive installdirs-recursive uninstalldirs-recursive \
all-recursive check-recursive installcheck-recursive info-recursive \
dvi-recursive mostlyclean-recursive distclean-recursive clean-recursive \
maintainer-clean-recursive tags tags-recursive mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-local install-data-am install-data install-am \
install uninstall-local uninstall-am uninstall all-redirect all-am all \
installdirs-am installdirs mostlyclean-generic distclean-generic \
clean-generic maintainer-clean-generic clean mostlyclean distclean \
maintainer-clean


install-data-local:
#>- 	$(mkinstalldirs) /usr/local/battlebots/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/
#>- 	$(INSTALL_DATA) current.cfg /usr/local/battlebots/current.cfg
#>+ 1
	$(INSTALL_DATA) current.cfg $(DESTDIR)/usr/local/battlebots/current.cfg
#>- 	$(mkinstalldirs) /usr/local/battlebots/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/
#>- 	$(INSTALL_DATA) heavy.cfg /usr/local/battlebots/heavy.cfg
#>+ 1
	$(INSTALL_DATA) heavy.cfg $(DESTDIR)/usr/local/battlebots/heavy.cfg
#>- 	$(mkinstalldirs) /usr/local/battlebots/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/
#>- 	$(INSTALL_DATA) light.cfg /usr/local/battlebots/light.cfg
#>+ 1
	$(INSTALL_DATA) light.cfg $(DESTDIR)/usr/local/battlebots/light.cfg
#>- 	$(mkinstalldirs) /usr/local/battlebots/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/
#>- 	$(INSTALL_DATA) medium.cfg /usr/local/battlebots/medium.cfg
#>+ 1
	$(INSTALL_DATA) medium.cfg $(DESTDIR)/usr/local/battlebots/medium.cfg
#>- 	$(mkinstalldirs) /usr/local/battlebots/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/pixmaps/
#>- 	$(INSTALL_DATA) mine.xpm /usr/local/battlebots/pixmaps/mine.xpm
#>+ 1
	$(INSTALL_DATA) mine.xpm $(DESTDIR)/usr/local/battlebots/pixmaps/mine.xpm
#>- 	$(mkinstalldirs) /usr/local/battlebots/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/pixmaps/
#>- 	$(INSTALL_DATA) missile.xpm /usr/local/battlebots/pixmaps/missile.xpm
#>+ 1
	$(INSTALL_DATA) missile.xpm $(DESTDIR)/usr/local/battlebots/pixmaps/missile.xpm
#>- 	$(mkinstalldirs) /usr/local/battlebots/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/
#>- 	$(INSTALL_DATA) ultralight.cfg /usr/local/battlebots/ultralight.cfg
#>+ 1
	$(INSTALL_DATA) ultralight.cfg $(DESTDIR)/usr/local/battlebots/ultralight.cfg
#>- 	$(mkinstalldirs) /etc/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/etc/
#>- 	$(INSTALL_DATA) battlebots.conf /etc/battlebots.conf
#>+ 1
	$(INSTALL_DATA) battlebots.conf $(DESTDIR)/etc/battlebots.conf
#>- 	$(mkinstalldirs) /usr/local/battlebots/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/pixmaps/
#>- 	$(INSTALL_DATA) radarmissile.bmp /usr/local/battlebots/pixmaps/radarmissile.bmp
#>+ 1
	$(INSTALL_DATA) radarmissile.bmp $(DESTDIR)/usr/local/battlebots/pixmaps/radarmissile.bmp
#>- 	$(mkinstalldirs) /usr/local/battlebots/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/pixmaps/
#>- 	$(INSTALL_DATA) chaff.bmp /usr/local/battlebots/pixmaps/chaff.bmp
#>+ 1
	$(INSTALL_DATA) chaff.bmp $(DESTDIR)/usr/local/battlebots/pixmaps/chaff.bmp
#>- 	$(mkinstalldirs) /usr/local/battlebots/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/pixmaps/
#>- 	$(INSTALL_DATA) skepp0.bmp /usr/local/battlebots/pixmaps/skepp0.bmp
#>+ 1
	$(INSTALL_DATA) skepp0.bmp $(DESTDIR)/usr/local/battlebots/pixmaps/skepp0.bmp
#>- 	$(mkinstalldirs) /usr/local/battlebots/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/pixmaps/
#>- 	$(INSTALL_DATA) skepp1.bmp /usr/local/battlebots/pixmaps/skepp1.bmp
#>+ 1
	$(INSTALL_DATA) skepp1.bmp $(DESTDIR)/usr/local/battlebots/pixmaps/skepp1.bmp
#>- 	$(mkinstalldirs) /usr/local/battlebots/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/pixmaps/
#>- 	$(INSTALL_DATA) skepp2.bmp /usr/local/battlebots/pixmaps/skepp2.bmp
#>+ 1
	$(INSTALL_DATA) skepp2.bmp $(DESTDIR)/usr/local/battlebots/pixmaps/skepp2.bmp
#>- 	$(mkinstalldirs) /usr/local/battlebots/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/pixmaps/
#>- 	$(INSTALL_DATA) skepp3.bmp /usr/local/battlebots/pixmaps/skepp3.bmp
#>+ 1
	$(INSTALL_DATA) skepp3.bmp $(DESTDIR)/usr/local/battlebots/pixmaps/skepp3.bmp
#>- 	$(mkinstalldirs) /usr/local/battlebots/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/pixmaps/
#>- 	$(INSTALL_DATA) skepp4.bmp /usr/local/battlebots/pixmaps/skepp4.bmp
#>+ 1
	$(INSTALL_DATA) skepp4.bmp $(DESTDIR)/usr/local/battlebots/pixmaps/skepp4.bmp
#>- 	$(mkinstalldirs) /usr/local/battlebots/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/pixmaps/
#>- 	$(INSTALL_DATA) skepp5.bmp /usr/local/battlebots/pixmaps/skepp5.bmp
#>+ 1
	$(INSTALL_DATA) skepp5.bmp $(DESTDIR)/usr/local/battlebots/pixmaps/skepp5.bmp
#>- 	$(mkinstalldirs) /usr/local/battlebots/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/pixmaps/
#>- 	$(INSTALL_DATA) skepp6.bmp /usr/local/battlebots/pixmaps/skepp6.bmp
#>+ 1
	$(INSTALL_DATA) skepp6.bmp $(DESTDIR)/usr/local/battlebots/pixmaps/skepp6.bmp
#>- 	$(mkinstalldirs) /usr/local/battlebots/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/pixmaps/
#>- 	$(INSTALL_DATA) skepp7.bmp /usr/local/battlebots/pixmaps/skepp7.bmp
#>+ 1
	$(INSTALL_DATA) skepp7.bmp $(DESTDIR)/usr/local/battlebots/pixmaps/skepp7.bmp
#>- 	$(mkinstalldirs) /usr/local/battlebots/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/
#>- 	$(INSTALL_DATA) BUGS /usr/local/battlebots/BUGS
#>+ 1
	$(INSTALL_DATA) BUGS $(DESTDIR)/usr/local/battlebots/BUGS
#>- 	$(mkinstalldirs) /usr/local/battlebots/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/pixmaps/
#>- 	$(INSTALL_DATA) mainmenu.png /usr/local/battlebots/pixmaps/mainmenu.png
#>+ 1
	$(INSTALL_DATA) mainmenu.png $(DESTDIR)/usr/local/battlebots/pixmaps/mainmenu.png
#>- 	$(mkinstalldirs) /usr/local/battlebots/bots/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/bots/
#>- 	$(INSTALL_DATA) example1.basm /usr/local/battlebots/bots/example1.basm
#>+ 1
	$(INSTALL_DATA) example1.basm $(DESTDIR)/usr/local/battlebots/bots/example1.basm
#>- 	$(mkinstalldirs) /usr/local/battlebots/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/pixmaps/
#>- 	$(INSTALL_DATA) metal.png /usr/local/battlebots/pixmaps/metal.png
#>+ 1
	$(INSTALL_DATA) metal.png $(DESTDIR)/usr/local/battlebots/pixmaps/metal.png
#>- 	$(mkinstalldirs) /usr/local/battlebots/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/pixmaps/
#>- 	$(INSTALL_DATA) metalback2.png /usr/local/battlebots/pixmaps/metalback2.png
#>+ 1
	$(INSTALL_DATA) metalback2.png $(DESTDIR)/usr/local/battlebots/pixmaps/metalback2.png
#>- 	$(mkinstalldirs) /usr/local/battlebots/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/pixmaps/
#>- 	$(INSTALL_DATA) backbutton.xpm /usr/local/battlebots/pixmaps/backbutton.xpm
#>+ 1
	$(INSTALL_DATA) backbutton.xpm $(DESTDIR)/usr/local/battlebots/pixmaps/backbutton.xpm
#>- 	$(mkinstalldirs) /usr/local/battlebots/doc/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/doc/
#>- 	$(INSTALL_DATA) sourceguide.txt /usr/local/battlebots/doc/sourceguide.txt
#>+ 1
	$(INSTALL_DATA) sourceguide.txt $(DESTDIR)/usr/local/battlebots/doc/sourceguide.txt
#>- 	$(mkinstalldirs) /usr/local/battlebots/doc/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/doc/
#>- 	$(INSTALL_DATA) index-14.html /usr/local/battlebots/doc/index-14.html
#>+ 1
	$(INSTALL_DATA) index-14.html $(DESTDIR)/usr/local/battlebots/doc/index-14.html
#>- 	$(mkinstalldirs) /usr/local/battlebots/bots/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/battlebots/bots/
#>- 	$(INSTALL_DATA) teamtracker.basm /usr/local/battlebots/bots/teamtracker.basm
#>+ 1
	$(INSTALL_DATA) teamtracker.basm $(DESTDIR)/usr/local/battlebots/bots/teamtracker.basm

uninstall-local:
#>- 	-rm -f /usr/local/battlebots/current.cfg
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/current.cfg
#>- 	-rm -f /usr/local/battlebots/heavy.cfg
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/heavy.cfg
#>- 	-rm -f /usr/local/battlebots/light.cfg
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/light.cfg
#>- 	-rm -f /usr/local/battlebots/medium.cfg
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/medium.cfg
#>- 	-rm -f /usr/local/battlebots/pixmaps/mine.xpm
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/pixmaps/mine.xpm
#>- 	-rm -f /usr/local/battlebots/pixmaps/missile.xpm
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/pixmaps/missile.xpm
#>- 	-rm -f /usr/local/battlebots/ultralight.cfg
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/ultralight.cfg
#>- 	-rm -f /etc/battlebots.conf
#>+ 1
	-rm -f $(DESTDIR)/etc/battlebots.conf
#>- 	-rm -f /usr/local/battlebots/pixmaps/radarmissile.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/pixmaps/radarmissile.bmp
#>- 	-rm -f /usr/local/battlebots/pixmaps/chaff.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/pixmaps/chaff.bmp
#>- 	-rm -f /usr/local/battlebots/pixmaps/skepp0.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/pixmaps/skepp0.bmp
#>- 	-rm -f /usr/local/battlebots/pixmaps/skepp1.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/pixmaps/skepp1.bmp
#>- 	-rm -f /usr/local/battlebots/pixmaps/skepp2.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/pixmaps/skepp2.bmp
#>- 	-rm -f /usr/local/battlebots/pixmaps/skepp3.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/pixmaps/skepp3.bmp
#>- 	-rm -f /usr/local/battlebots/pixmaps/skepp4.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/pixmaps/skepp4.bmp
#>- 	-rm -f /usr/local/battlebots/pixmaps/skepp5.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/pixmaps/skepp5.bmp
#>- 	-rm -f /usr/local/battlebots/pixmaps/skepp6.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/pixmaps/skepp6.bmp
#>- 	-rm -f /usr/local/battlebots/pixmaps/skepp7.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/pixmaps/skepp7.bmp
#>- 	-rm -f /usr/local/battlebots/BUGS
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/BUGS
#>- 	-rm -f /usr/local/battlebots/pixmaps/mainmenu.png
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/pixmaps/mainmenu.png
#>- 	-rm -f /usr/local/battlebots/bots/example1.basm
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/bots/example1.basm
#>- 	-rm -f /usr/local/battlebots/pixmaps/metal.png
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/pixmaps/metal.png
#>- 	-rm -f /usr/local/battlebots/pixmaps/metalback2.png
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/pixmaps/metalback2.png
#>- 	-rm -f /usr/local/battlebots/pixmaps/backbutton.xpm
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/pixmaps/backbutton.xpm
#>- 	-rm -f /usr/local/battlebots/doc/sourceguide.txt
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/doc/sourceguide.txt
#>- 	-rm -f /usr/local/battlebots/doc/index-14.html
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/doc/index-14.html
#>- 	-rm -f /usr/local/battlebots/bots/teamtracker.basm
#>+ 1
	-rm -f $(DESTDIR)/usr/local/battlebots/bots/teamtracker.basm

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
createbot.moc.cpp: $(srcdir)/createbot.h
	$(MOC) $(srcdir)/createbot.h -o createbot.moc.cpp

#>+ 3
quickconf.moc.cpp: $(srcdir)/quickconf.h
	$(MOC) $(srcdir)/quickconf.h -o quickconf.moc.cpp

#>+ 3
confedit.moc.cpp: $(srcdir)/confedit.h
	$(MOC) $(srcdir)/confedit.h -o confedit.moc.cpp

#>+ 3
kothtournament.moc.cpp: $(srcdir)/kothtournament.h
	$(MOC) $(srcdir)/kothtournament.h -o kothtournament.moc.cpp

#>+ 3
startsbatt.moc.cpp: $(srcdir)/startsbatt.h
	$(MOC) $(srcdir)/startsbatt.h -o startsbatt.moc.cpp

#>+ 3
starttournament.moc.cpp: $(srcdir)/starttournament.h
	$(MOC) $(srcdir)/starttournament.h -o starttournament.moc.cpp

#>+ 3
robots.moc.cpp: $(srcdir)/robots.h
	$(MOC) $(srcdir)/robots.h -o robots.moc.cpp

#>+ 3
battlebots.moc.cpp: $(srcdir)/battlebots.h
	$(MOC) $(srcdir)/battlebots.h -o battlebots.moc.cpp

#>+ 3
screenobject.moc.cpp: $(srcdir)/screenobject.h
	$(MOC) $(srcdir)/screenobject.h -o screenobject.moc.cpp

#>+ 3
botinfo.moc.cpp: $(srcdir)/botinfo.h
	$(MOC) $(srcdir)/botinfo.h -o botinfo.moc.cpp

#>+ 3
debugwindow.moc.cpp: $(srcdir)/debugwindow.h
	$(MOC) $(srcdir)/debugwindow.h -o debugwindow.moc.cpp

#>+ 3
battlearea.moc.cpp: $(srcdir)/battlearea.h
	$(MOC) $(srcdir)/battlearea.h -o battlearea.moc.cpp

#>+ 3
devchoice.moc.cpp: $(srcdir)/devchoice.h
	$(MOC) $(srcdir)/devchoice.h -o devchoice.moc.cpp

#>+ 3
clean-metasources:
	-rm -f  createbot.moc.cpp quickconf.moc.cpp confedit.moc.cpp kothtournament.moc.cpp startsbatt.moc.cpp starttournament.moc.cpp robots.moc.cpp battlebots.moc.cpp screenobject.moc.cpp botinfo.moc.cpp debugwindow.moc.cpp battlearea.moc.cpp devchoice.moc.cpp

#>+ 2
docs: docs-recursive docs-am

#>+ 2
docs-am:

#>+ 5
force-reedit:
		cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps battlebots/Makefile
	cd $(top_srcdir) && perl am_edit battlebots-1.0.0/battlebots/Makefile.in


#>+ 11
battlebots.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/pixmapholder.cpp $(srcdir)/pixbutton.cpp $(srcdir)/infobox.cpp $(srcdir)/cloaker.cpp $(srcdir)/chiller.cpp $(srcdir)/docbrowser.cpp $(srcdir)/startdeathbatt.cpp $(srcdir)/startsurvbatt.cpp $(srcdir)/startcup.cpp $(srcdir)/scandetect.cpp $(srcdir)/chaff.cpp $(srcdir)/chafflauncher.cpp $(srcdir)/debugwindow.cpp $(srcdir)/kothtournament.cpp $(srcdir)/rocket.cpp $(srcdir)/rocketlauncher.cpp $(srcdir)/beam.cpp $(srcdir)/beamer.cpp $(srcdir)/quickconf.cpp $(srcdir)/installdir.cpp $(srcdir)/turret.cpp $(srcdir)/timedev.cpp $(srcdir)/steering.cpp $(srcdir)/starttournament.cpp $(srcdir)/startsbatt.cpp $(srcdir)/shield.cpp $(srcdir)/screenobject.cpp $(srcdir)/scanner.cpp $(srcdir)/robots.cpp $(srcdir)/robcpu.cpp $(srcdir)/repair.cpp $(srcdir)/ram.cpp $(srcdir)/radarmissilelauncher.cpp $(srcdir)/radarmissile.cpp $(srcdir)/plasma.cpp $(srcdir)/missile.cpp $(srcdir)/minelayer.cpp $(srcdir)/mine.cpp $(srcdir)/instruktion.cpp $(srcdir)/fuel.cpp $(srcdir)/explosion.cpp $(srcdir)/engine.cpp $(srcdir)/device.cpp $(srcdir)/devchoice.cpp $(srcdir)/createbot.cpp $(srcdir)/cpu.cpp $(srcdir)/confedit.cpp $(srcdir)/communication.cpp $(srcdir)/botinfo.cpp $(srcdir)/battlearea.cpp $(srcdir)/armor.cpp $(srcdir)/battlebots.cpp $(srcdir)/main.cpp  createbot.moc.cpp quickconf.moc.cpp confedit.moc.cpp kothtournament.moc.cpp startsbatt.moc.cpp starttournament.moc.cpp robots.moc.cpp battlebots.moc.cpp screenobject.moc.cpp botinfo.moc.cpp debugwindow.moc.cpp battlearea.moc.cpp devchoice.moc.cpp
	@echo 'creating battlebots.all_cpp.cpp ...'; \
	rm -f battlebots.all_cpp.files battlebots.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> battlebots.all_cpp.final; \
	for file in pixmapholder.cpp pixbutton.cpp infobox.cpp cloaker.cpp chiller.cpp docbrowser.cpp startdeathbatt.cpp startsurvbatt.cpp startcup.cpp scandetect.cpp chaff.cpp chafflauncher.cpp debugwindow.cpp kothtournament.cpp rocket.cpp rocketlauncher.cpp beam.cpp beamer.cpp quickconf.cpp installdir.cpp turret.cpp timedev.cpp steering.cpp starttournament.cpp startsbatt.cpp shield.cpp screenobject.cpp scanner.cpp robots.cpp robcpu.cpp repair.cpp ram.cpp radarmissilelauncher.cpp radarmissile.cpp plasma.cpp missile.cpp minelayer.cpp mine.cpp instruktion.cpp fuel.cpp explosion.cpp engine.cpp device.cpp devchoice.cpp createbot.cpp cpu.cpp confedit.cpp communication.cpp botinfo.cpp battlearea.cpp armor.cpp battlebots.cpp main.cpp  createbot.moc.cpp quickconf.moc.cpp confedit.moc.cpp kothtournament.moc.cpp startsbatt.moc.cpp starttournament.moc.cpp robots.moc.cpp battlebots.moc.cpp screenobject.moc.cpp botinfo.moc.cpp debugwindow.moc.cpp battlearea.moc.cpp devchoice.moc.cpp; do \
	  echo "#include \"$$file\"" >> battlebots.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> battlebots.all_cpp.final; \
	done; \
	cat battlebots.all_cpp.final battlebots.all_cpp.files  > battlebots.all_cpp.cpp; \
	rm -f battlebots.all_cpp.final battlebots.all_cpp.files

#>+ 3
clean-final:
	-rm -f battlebots.all_cpp.cpp

#>+ 2
final:
	$(MAKE) battlebots_OBJECTS="$(battlebots_final_OBJECTS)" all-am
#>+ 3
cvs-clean:
	$(MAKE) -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo
