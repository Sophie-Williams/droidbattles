# Makefile.in generated by automake 1.6.3 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 1.339 $ 
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
ARTSCCONFIG = @ARTSCCONFIG@
AS = @AS@
AUTODIRS = @AUTODIRS@
AWK = @AWK@
CC = @CC@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
DPMSINC = @DPMSINC@
DPMSLIB = @DPMSLIB@
ECHO = @ECHO@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = @GMSGFMT@
IDL = @IDL@
IDL_DEPENDENCIES = @IDL_DEPENDENCIES@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JAR = @JAR@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JVMLIBS = @JVMLIBS@
KDECONFIG = @KDECONFIG@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBGEN = @LIBGEN@
LIBJPEG = @LIBJPEG@
LIBMICO = @LIBMICO@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBRESOLV = @LIBRESOLV@
LIBSHADOW = @LIBSHADOW@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTIFF = @LIBTIFF@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBXINERAMA = @LIBXINERAMA@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMGIO = @LIB_KIMGIO@
LIB_KIO = @LIB_KIO@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_QTOPIA = @LIB_QTOPIA@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LN_S = @LN_S@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MICO_INCLUDES = @MICO_INCLUDES@
MICO_LDFLAGS = @MICO_LDFLAGS@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
NOREPO = @NOREPO@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
PAMLIBS = @PAMLIBS@
PASSWDLIBS = @PASSWDLIBS@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
PYTHONMODDIR = @PYTHONMODDIR@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QTOPIA_INCLUDES = @QTOPIA_INCLUDES@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
RC = @RC@
REPO = @REPO@
SETUIDFLAGS = @SETUIDFLAGS@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__quote = @am__quote@
idldir = @idldir@
install_sh = @install_sh@
jni_includes = @jni_includes@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
micodir = @micodir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
x_includes = @x_includes@
x_libraries = @x_libraries@

####### kdevelop will overwrite this part!!! (begin)##########
bin_PROGRAMS = droidbattles

droidbattles_SOURCES = turret.cpp timedev.cpp textmodefilemanip.cpp textmodebattlearea.cpp steering.cpp starttournament.cpp startsurvbatt.cpp startsbatt.cpp startdeathbatt.cpp startcup.cpp shield.cpp screenobject.cpp scanner.cpp scandetect.cpp rocketlauncher.cpp rocket.cpp robots.cpp robcpu.cpp repair.cpp ram.cpp radarmissilelauncher.cpp radarmissile.cpp quickconf.cpp plasma.cpp pixmapholder.cpp pixbutton.cpp myqmultilineedit.cpp missile.cpp minelayer.cpp mine.cpp main.cpp kothtournament.cpp instruktion.cpp installdir.cpp infobox.cpp fuel.cpp explosion.cpp engine.cpp droidbattles.cpp docbrowser.cpp device.cpp devchoice.cpp debugwindow.cpp createbot.cpp cpu.cpp confedit.cpp communication.cpp cloaker.cpp chiller.cpp chafflauncher.cpp chaff.cpp botinfo.cpp beamer.cpp beam.cpp battlearea.cpp armor.cpp 
SOURCES = turret.cpp timedev.cpp textmodefilemanip.cpp textmodebattlearea.cpp steering.cpp starttournament.cpp startsurvbatt.cpp startsbatt.cpp startdeathbatt.cpp startcup.cpp shield.cpp screenobject.cpp scanner.cpp scandetect.cpp rocketlauncher.cpp rocket.cpp robots.cpp robcpu.cpp repair.cpp ram.cpp radarmissilelauncher.cpp radarmissile.cpp quickconf.cpp plasma.cpp pixmapholder.cpp pixbutton.cpp myqmultilineedit.cpp missile.cpp minelayer.cpp mine.cpp main.cpp kothtournament.cpp instruktion.cpp installdir.cpp infobox.cpp fuel.cpp explosion.cpp engine.cpp droidbattles.cpp docbrowser.cpp device.cpp devchoice.cpp debugwindow.cpp createbot.cpp cpu.cpp confedit.cpp communication.cpp cloaker.cpp chiller.cpp chafflauncher.cpp chaff.cpp botinfo.cpp beamer.cpp beam.cpp battlearea.cpp armor.cpp 
INTERFACES = 
TRANSLATIONS = 
KDE_OPTIONS = qtonly
droidbattles_LDADD = $(LIB_QPE) $(LIB_QT) $(LIBSOCKET)

SUBDIRS = docs 

EXTRA_DIST = lo32-app-droidbattles.png lo16-app-droidbattles.png filenew.xpm filesave.xpm fileopen.xpm armor.cpp armor.h backbutton.xpm battlearea.cpp battlearea.h beam.cpp beam.h beamer.cpp beamer.h botinfo.cpp botinfo.h chaff.bmp chaff.cpp chaff.h chafflauncher.cpp chafflauncher.h chiller.cpp chiller.h cloaker.cpp cloaker.h commonsymbols.h communication.cpp communication.h confedit.cpp confedit.h confstruct.h cpu.cpp cpu.h createbot.cpp createbot.h current.cfg debugcontents.h debugwindow.cpp debugwindow.h devchoice.cpp devchoice.h device.cpp device.h docbrowser.cpp docbrowser.h droidbattles.conf droidbattles.cpp droidbattles.h droidbattles.xpm engine.cpp engine.h example1.basm explosion.cpp explosion.h fuel.cpp fuel.h heavy.cfg infobox.cpp infobox.h installdir.cpp installdir.h instruktion.cpp instruktion.h kothtournament.cpp kothtournament.h light.cfg main.cpp mainmenu.png matchresult.h mine.cpp mine.h minelayer.cpp minelayer.h missile.cpp missile.h missile.xpm myqmultilineedit.cpp myqmultilineedit.h pixbutton.cpp pixbutton.h pixmapholder.cpp pixmapholder.h plasma.cpp plasma.h quickconf.cpp quickconf.h radarmissile.bmp radarmissile.cpp radarmissile.h radarmissilelauncher.cpp radarmissilelauncher.h ram.cpp ram.h repair.cpp repair.h robcpu.cpp robcpu.h robots.cpp robots.h rocket.cpp rocket.h rocketlauncher.cpp rocketlauncher.h scandetect.cpp scandetect.h scanner.cpp scanner.h screenobject.cpp screenobject.h shield.cpp shield.h skepp0.bmp skepp1.bmp skepp2.bmp skepp3.bmp skepp4.bmp skepp5.bmp skepp6.bmp skepp7.bmp startcup.cpp startcup.h startdeathbatt.cpp startdeathbatt.h startsbatt.cpp startsbatt.h startsurvbatt.cpp startsurvbatt.h starttournament.cpp starttournament.h steering.cpp steering.h teamtracker.basm textmodebattlearea.cpp textmodebattlearea.h textmodefilemanip.cpp textmodefilemanip.h timedev.cpp timedev.h turret.cpp turret.h ultralight.cfg resource.h 

####### kdevelop will overwrite this part!!! (end)############

# set the include path for X, qt and KDE
INCLUDES = $(all_includes)

#>- droidbattles_METASOURCES = AUTO

# the library search path. 
droidbattles_LDFLAGS = $(all_libraries) 

# them while "make clean", use CLEANFILES
DISTCLEANFILES = $(droidbattles_METASOURCES)
subdir = droidbattles
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = droidbattles$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_droidbattles_OBJECTS = turret.$(OBJEXT) timedev.$(OBJEXT) \
	textmodefilemanip.$(OBJEXT) textmodebattlearea.$(OBJEXT) \
	steering.$(OBJEXT) starttournament.$(OBJEXT) \
	startsurvbatt.$(OBJEXT) startsbatt.$(OBJEXT) \
	startdeathbatt.$(OBJEXT) startcup.$(OBJEXT) shield.$(OBJEXT) \
	screenobject.$(OBJEXT) scanner.$(OBJEXT) scandetect.$(OBJEXT) \
	rocketlauncher.$(OBJEXT) rocket.$(OBJEXT) robots.$(OBJEXT) \
	robcpu.$(OBJEXT) repair.$(OBJEXT) ram.$(OBJEXT) \
	radarmissilelauncher.$(OBJEXT) radarmissile.$(OBJEXT) \
	quickconf.$(OBJEXT) plasma.$(OBJEXT) pixmapholder.$(OBJEXT) \
	pixbutton.$(OBJEXT) myqmultilineedit.$(OBJEXT) \
	missile.$(OBJEXT) minelayer.$(OBJEXT) mine.$(OBJEXT) \
	main.$(OBJEXT) kothtournament.$(OBJEXT) instruktion.$(OBJEXT) \
	installdir.$(OBJEXT) infobox.$(OBJEXT) fuel.$(OBJEXT) \
	explosion.$(OBJEXT) engine.$(OBJEXT) droidbattles.$(OBJEXT) \
	docbrowser.$(OBJEXT) device.$(OBJEXT) devchoice.$(OBJEXT) \
	debugwindow.$(OBJEXT) createbot.$(OBJEXT) cpu.$(OBJEXT) \
	confedit.$(OBJEXT) communication.$(OBJEXT) cloaker.$(OBJEXT) \
	chiller.$(OBJEXT) chafflauncher.$(OBJEXT) chaff.$(OBJEXT) \
	botinfo.$(OBJEXT) beamer.$(OBJEXT) beam.$(OBJEXT) \
	battlearea.$(OBJEXT) armor.$(OBJEXT)
#>- droidbattles_OBJECTS = $(am_droidbattles_OBJECTS)
#>+ 25
droidbattles_final_OBJECTS = droidbattles.all_cpp.o 
droidbattles_nofinal_OBJECTS = turret.$(OBJEXT) timedev.$(OBJEXT) \
	textmodefilemanip.$(OBJEXT) textmodebattlearea.$(OBJEXT) \
	steering.$(OBJEXT) starttournament.$(OBJEXT) \
	startsurvbatt.$(OBJEXT) startsbatt.$(OBJEXT) \
	startdeathbatt.$(OBJEXT) startcup.$(OBJEXT) shield.$(OBJEXT) \
	screenobject.$(OBJEXT) scanner.$(OBJEXT) scandetect.$(OBJEXT) \
	rocketlauncher.$(OBJEXT) rocket.$(OBJEXT) robots.$(OBJEXT) \
	robcpu.$(OBJEXT) repair.$(OBJEXT) ram.$(OBJEXT) \
	radarmissilelauncher.$(OBJEXT) radarmissile.$(OBJEXT) \
	quickconf.$(OBJEXT) plasma.$(OBJEXT) pixmapholder.$(OBJEXT) \
	pixbutton.$(OBJEXT) myqmultilineedit.$(OBJEXT) \
	missile.$(OBJEXT) minelayer.$(OBJEXT) mine.$(OBJEXT) \
	main.$(OBJEXT) kothtournament.$(OBJEXT) instruktion.$(OBJEXT) \
	installdir.$(OBJEXT) infobox.$(OBJEXT) fuel.$(OBJEXT) \
	explosion.$(OBJEXT) engine.$(OBJEXT) droidbattles.$(OBJEXT) \
	docbrowser.$(OBJEXT) device.$(OBJEXT) devchoice.$(OBJEXT) \
	debugwindow.$(OBJEXT) createbot.$(OBJEXT) cpu.$(OBJEXT) \
	confedit.$(OBJEXT) communication.$(OBJEXT) cloaker.$(OBJEXT) \
	chiller.$(OBJEXT) chafflauncher.$(OBJEXT) chaff.$(OBJEXT) \
	botinfo.$(OBJEXT) beamer.$(OBJEXT) beam.$(OBJEXT) \
	battlearea.$(OBJEXT) armor.$(OBJEXT)\
	createbot.moc.o quickconf.moc.o confedit.moc.o kothtournament.moc.o startsbatt.moc.o starttournament.moc.o robots.moc.o screenobject.moc.o botinfo.moc.o debugwindow.moc.o droidbattles.moc.o battlearea.moc.o devchoice.moc.o 
@KDE_USE_FINAL_FALSE@droidbattles_OBJECTS = $(droidbattles_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@droidbattles_OBJECTS = $(droidbattles_final_OBJECTS)
droidbattles_DEPENDENCIES =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- @AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/armor.Po ./$(DEPDIR)/battlearea.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/beam.Po ./$(DEPDIR)/beamer.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/botinfo.Po ./$(DEPDIR)/chaff.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/chafflauncher.Po ./$(DEPDIR)/chiller.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/cloaker.Po ./$(DEPDIR)/communication.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/confedit.Po ./$(DEPDIR)/cpu.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/createbot.Po ./$(DEPDIR)/debugwindow.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/devchoice.Po ./$(DEPDIR)/device.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/docbrowser.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/droidbattles.Po ./$(DEPDIR)/engine.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/explosion.Po ./$(DEPDIR)/fuel.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/infobox.Po ./$(DEPDIR)/installdir.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/instruktion.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/kothtournament.Po ./$(DEPDIR)/main.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/mine.Po ./$(DEPDIR)/minelayer.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/missile.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/myqmultilineedit.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/pixbutton.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/pixmapholder.Po ./$(DEPDIR)/plasma.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/quickconf.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/radarmissile.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/radarmissilelauncher.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/ram.Po ./$(DEPDIR)/repair.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/robcpu.Po ./$(DEPDIR)/robots.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/rocket.Po ./$(DEPDIR)/rocketlauncher.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/scandetect.Po ./$(DEPDIR)/scanner.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/screenobject.Po ./$(DEPDIR)/shield.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/startcup.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/startdeathbatt.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/startsbatt.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/startsurvbatt.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/starttournament.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/steering.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/textmodebattlearea.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/textmodefilemanip.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/timedev.Po ./$(DEPDIR)/turret.Po
#>+ 73
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@DEP_FILES =  $(DEPDIR)/createbot.moc.P $(DEPDIR)/quickconf.moc.P $(DEPDIR)/confedit.moc.P $(DEPDIR)/kothtournament.moc.P $(DEPDIR)/startsbatt.moc.P $(DEPDIR)/starttournament.moc.P $(DEPDIR)/robots.moc.P $(DEPDIR)/screenobject.moc.P $(DEPDIR)/botinfo.moc.P $(DEPDIR)/debugwindow.moc.P $(DEPDIR)/droidbattles.moc.P $(DEPDIR)/battlearea.moc.P $(DEPDIR)/devchoice.moc.P  $(DEPDIR)/droidbattles.all_cpp.P  ./$(DEPDIR)/armor.Po ./$(DEPDIR)/battlearea.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/beam.Po ./$(DEPDIR)/beamer.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/botinfo.Po ./$(DEPDIR)/chaff.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/chafflauncher.Po ./$(DEPDIR)/chiller.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/cloaker.Po ./$(DEPDIR)/communication.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/confedit.Po ./$(DEPDIR)/cpu.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/createbot.Po ./$(DEPDIR)/debugwindow.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/devchoice.Po ./$(DEPDIR)/device.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/docbrowser.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/droidbattles.Po ./$(DEPDIR)/engine.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/explosion.Po ./$(DEPDIR)/fuel.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/infobox.Po ./$(DEPDIR)/installdir.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/instruktion.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/kothtournament.Po ./$(DEPDIR)/main.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/mine.Po ./$(DEPDIR)/minelayer.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/missile.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/myqmultilineedit.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/pixbutton.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/pixmapholder.Po ./$(DEPDIR)/plasma.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/quickconf.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/radarmissile.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/radarmissilelauncher.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/ram.Po ./$(DEPDIR)/repair.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/robcpu.Po ./$(DEPDIR)/robots.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/rocket.Po ./$(DEPDIR)/rocketlauncher.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/scandetect.Po ./$(DEPDIR)/scanner.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/screenobject.Po ./$(DEPDIR)/shield.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/startcup.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/startdeathbatt.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/startsbatt.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/startsurvbatt.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/starttournament.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/steering.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/textmodebattlearea.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/textmodefilemanip.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/timedev.Po ./$(DEPDIR)/turret.Po
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@DEP_FILES =  $(DEPDIR)/createbot.moc.P $(DEPDIR)/quickconf.moc.P $(DEPDIR)/confedit.moc.P $(DEPDIR)/kothtournament.moc.P $(DEPDIR)/startsbatt.moc.P $(DEPDIR)/starttournament.moc.P $(DEPDIR)/robots.moc.P $(DEPDIR)/screenobject.moc.P $(DEPDIR)/botinfo.moc.P $(DEPDIR)/debugwindow.moc.P $(DEPDIR)/droidbattles.moc.P $(DEPDIR)/battlearea.moc.P $(DEPDIR)/devchoice.moc.P  ./$(DEPDIR)/armor.Po ./$(DEPDIR)/battlearea.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/beam.Po ./$(DEPDIR)/beamer.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/botinfo.Po ./$(DEPDIR)/chaff.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/chafflauncher.Po ./$(DEPDIR)/chiller.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/cloaker.Po ./$(DEPDIR)/communication.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/confedit.Po ./$(DEPDIR)/cpu.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/createbot.Po ./$(DEPDIR)/debugwindow.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/devchoice.Po ./$(DEPDIR)/device.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/docbrowser.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/droidbattles.Po ./$(DEPDIR)/engine.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/explosion.Po ./$(DEPDIR)/fuel.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/infobox.Po ./$(DEPDIR)/installdir.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/instruktion.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/kothtournament.Po ./$(DEPDIR)/main.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/mine.Po ./$(DEPDIR)/minelayer.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/missile.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/myqmultilineedit.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/pixbutton.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/pixmapholder.Po ./$(DEPDIR)/plasma.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/quickconf.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/radarmissile.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/radarmissilelauncher.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/ram.Po ./$(DEPDIR)/repair.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/robcpu.Po ./$(DEPDIR)/robots.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/rocket.Po ./$(DEPDIR)/rocketlauncher.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/scandetect.Po ./$(DEPDIR)/scanner.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/screenobject.Po ./$(DEPDIR)/shield.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/startcup.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/startdeathbatt.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/startsbatt.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/startsurvbatt.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/starttournament.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/steering.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/textmodebattlearea.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/textmodefilemanip.Po \
	@AMDEP_TRUE@	./$(DEPDIR)/timedev.Po ./$(DEPDIR)/turret.Po

#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
#>- $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- $(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = @CXXFLAGS@
DIST_SOURCES = $(droidbattles_SOURCES)

RECURSIVE_TARGETS = info-recursive dvi-recursive install-info-recursive \
	uninstall-info-recursive all-recursive install-data-recursive \
	install-exec-recursive installdirs-recursive install-recursive \
	uninstall-recursive check-recursive installcheck-recursive
DIST_COMMON = Makefile.am Makefile.in
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = turret.cpp timedev.cpp textmodefilemanip.cpp textmodebattlearea.cpp steering.cpp starttournament.cpp startsurvbatt.cpp startsbatt.cpp startdeathbatt.cpp startcup.cpp shield.cpp screenobject.cpp scanner.cpp scandetect.cpp rocketlauncher.cpp rocket.cpp robots.cpp robcpu.cpp repair.cpp ram.cpp radarmissilelauncher.cpp radarmissile.cpp quickconf.cpp plasma.cpp pixmapholder.cpp pixbutton.cpp myqmultilineedit.cpp missile.cpp minelayer.cpp mine.cpp main.cpp kothtournament.cpp instruktion.cpp installdir.cpp infobox.cpp fuel.cpp explosion.cpp engine.cpp droidbattles.cpp docbrowser.cpp device.cpp devchoice.cpp debugwindow.cpp createbot.cpp cpu.cpp confedit.cpp communication.cpp cloaker.cpp chiller.cpp chafflauncher.cpp chaff.cpp botinfo.cpp beamer.cpp beam.cpp battlearea.cpp armor.cpp 

#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
#>- 	cd $(top_srcdir) && \
#>- $(AUTOMAKE) --gnu  droidbattles/Makefile
#>+ 3
	cd $(top_srcdir) && \
	$(AUTOMAKE) --gnu  droidbattles/Makefile
	cd $(top_srcdir) && perl admin/am_edit droidbattles-1.0.6/droidbattles/Makefile.in
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	if test -f $$p \
	|| test -f $$p1 \
	; then \
	f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	$(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f $$p $$f"; \
	rm -f $$p $$f ; \
	done
droidbattles$(EXEEXT): $(droidbattles_OBJECTS) $(droidbattles_DEPENDENCIES) 
	@rm -f droidbattles$(EXEEXT)
	$(CXXLINK) $(droidbattles_LDFLAGS) $(droidbattles_OBJECTS) $(droidbattles_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/armor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/battlearea.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beam.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/beamer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/botinfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chaff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chafflauncher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chiller.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cloaker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/communication.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/confedit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/createbot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/debugwindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/devchoice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/device.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/docbrowser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/droidbattles.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/engine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/explosion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fuel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/infobox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/installdir.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/instruktion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kothtournament.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/minelayer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/missile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/myqmultilineedit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pixbutton.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pixmapholder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/plasma.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quickconf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/radarmissile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/radarmissilelauncher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ram.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/repair.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/robcpu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/robots.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rocket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rocketlauncher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scandetect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scanner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/screenobject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shield.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/startcup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/startdeathbatt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/startsbatt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/startsurvbatt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/starttournament.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/steering.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/textmodebattlearea.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/textmodefilemanip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timedev.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/turret.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CXXDEPMODE = @CXXDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	echo "Making $$target in $$subdir"; \
	if test "$$subdir" = "."; then \
	dot_seen=yes; \
	local_target="$$target-am"; \
	else \
	local_target="$$target"; \
	fi; \
	(cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	|| case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	$(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
	maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	*) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	if test "$$subdir" = "."; then :; else \
	rev="$$subdir $$rev"; \
	fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	echo "Making $$target in $$subdir"; \
	if test "$$subdir" = "."; then \
	local_target="$$target-am"; \
	else \
	local_target="$$target"; \
	fi; \
	(cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	|| case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	done | \
	$(AWK) '    { files[$$0] = 1; } \
	END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
	$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	if test "$$subdir" = .; then :; else \
	test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	done | \
	$(AWK) '    { files[$$0] = 1; } \
	END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	|| $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	$$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	&& cd $(top_srcdir) \
	&& gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	dir="/$$dir"; \
	$(mkinstalldirs) "$(distdir)$$dir"; \
	else \
	dir=''; \
	fi; \
	if test -d $$d/$$file; then \
	if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	fi; \
	cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	else \
	test -f $(distdir)/$$file \
	|| cp -p $$d/$$file $(distdir)/$$file \
	|| exit 1; \
	fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	if test "$$subdir" = .; then :; else \
	test -d $(distdir)/$$subdir \
	|| mkdir $(distdir)/$$subdir \
	|| exit 1; \
	(cd $$subdir && \
	$(MAKE) $(AM_MAKEFLAGS) \
	top_distdir="$(top_distdir)" \
	distdir=../$(distdir)/$$subdir \
	distdir) \
	|| exit 1; \
	fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	INSTALL_STRIP_FLAG=-s \
	`test -z '$(STRIP)' || \
	echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am: install-data-local

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-binPROGRAMS uninstall-info-am uninstall-local

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) GTAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool clean-recursive \
	distclean distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-recursive distclean-tags distdir \
	dvi dvi-am dvi-recursive info info-am info-recursive install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-data-local install-data-recursive install-exec \
	install-exec-am install-exec-recursive install-info \
	install-info-am install-info-recursive install-man \
	install-recursive install-strip installcheck installcheck-am \
	installdirs installdirs-am installdirs-recursive \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am \
	uninstall-info-recursive uninstall-local uninstall-recursive


install-data-local:
#>- 	$(mkinstalldirs) /usr/local/droidbattles/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/pixmaps/
#>- 	$(INSTALL_DATA) $(srcdir)/backbutton.xpm /usr/local/droidbattles/pixmaps/backbutton.xpm
#>+ 1
	$(INSTALL_DATA) $(srcdir)/backbutton.xpm $(DESTDIR)/usr/local/droidbattles/pixmaps/backbutton.xpm
#>- 	$(mkinstalldirs) /usr/local/droidbattles/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/pixmaps/
#>- 	$(INSTALL_DATA) $(srcdir)/chaff.bmp /usr/local/droidbattles/pixmaps/chaff.bmp
#>+ 1
	$(INSTALL_DATA) $(srcdir)/chaff.bmp $(DESTDIR)/usr/local/droidbattles/pixmaps/chaff.bmp
#>- 	$(mkinstalldirs) /usr/local/droidbattles/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/
#>- 	$(INSTALL_DATA) $(srcdir)/current.cfg /usr/local/droidbattles/current.cfg
#>+ 1
	$(INSTALL_DATA) $(srcdir)/current.cfg $(DESTDIR)/usr/local/droidbattles/current.cfg
#>- 	$(mkinstalldirs) /etc/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/etc/
#>- 	$(INSTALL_DATA) $(srcdir)/droidbattles.conf /etc/droidbattles.conf
#>+ 1
	$(INSTALL_DATA) $(srcdir)/droidbattles.conf $(DESTDIR)/etc/droidbattles.conf
#>- 	$(mkinstalldirs) /usr/local/droidbattles/bots/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/bots/
#>- 	$(INSTALL_DATA) $(srcdir)/example1.basm /usr/local/droidbattles/bots/example1.basm
#>+ 1
	$(INSTALL_DATA) $(srcdir)/example1.basm $(DESTDIR)/usr/local/droidbattles/bots/example1.basm
#>- 	$(mkinstalldirs) /usr/local/droidbattles/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/
#>- 	$(INSTALL_DATA) $(srcdir)/heavy.cfg /usr/local/droidbattles/heavy.cfg
#>+ 1
	$(INSTALL_DATA) $(srcdir)/heavy.cfg $(DESTDIR)/usr/local/droidbattles/heavy.cfg
#>- 	$(mkinstalldirs) /usr/local/droidbattles/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/
#>- 	$(INSTALL_DATA) $(srcdir)/light.cfg /usr/local/droidbattles/light.cfg
#>+ 1
	$(INSTALL_DATA) $(srcdir)/light.cfg $(DESTDIR)/usr/local/droidbattles/light.cfg
#>- 	$(mkinstalldirs) /usr/local/droidbattles/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/pixmaps/
#>- 	$(INSTALL_DATA) $(srcdir)/mainmenu.png /usr/local/droidbattles/pixmaps/mainmenu.png
#>+ 1
	$(INSTALL_DATA) $(srcdir)/mainmenu.png $(DESTDIR)/usr/local/droidbattles/pixmaps/mainmenu.png
#>- 	$(mkinstalldirs) /usr/local/droidbattles/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/pixmaps/
#>- 	$(INSTALL_DATA) $(srcdir)/missile.xpm /usr/local/droidbattles/pixmaps/missile.xpm
#>+ 1
	$(INSTALL_DATA) $(srcdir)/missile.xpm $(DESTDIR)/usr/local/droidbattles/pixmaps/missile.xpm
#>- 	$(mkinstalldirs) /usr/local/droidbattles/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/pixmaps/
#>- 	$(INSTALL_DATA) $(srcdir)/radarmissile.bmp /usr/local/droidbattles/pixmaps/radarmissile.bmp
#>+ 1
	$(INSTALL_DATA) $(srcdir)/radarmissile.bmp $(DESTDIR)/usr/local/droidbattles/pixmaps/radarmissile.bmp
#>- 	$(mkinstalldirs) /usr/local/droidbattles/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/pixmaps/
#>- 	$(INSTALL_DATA) $(srcdir)/skepp0.bmp /usr/local/droidbattles/pixmaps/skepp0.bmp
#>+ 1
	$(INSTALL_DATA) $(srcdir)/skepp0.bmp $(DESTDIR)/usr/local/droidbattles/pixmaps/skepp0.bmp
#>- 	$(mkinstalldirs) /usr/local/droidbattles/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/pixmaps/
#>- 	$(INSTALL_DATA) $(srcdir)/skepp1.bmp /usr/local/droidbattles/pixmaps/skepp1.bmp
#>+ 1
	$(INSTALL_DATA) $(srcdir)/skepp1.bmp $(DESTDIR)/usr/local/droidbattles/pixmaps/skepp1.bmp
#>- 	$(mkinstalldirs) /usr/local/droidbattles/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/pixmaps/
#>- 	$(INSTALL_DATA) $(srcdir)/skepp2.bmp /usr/local/droidbattles/pixmaps/skepp2.bmp
#>+ 1
	$(INSTALL_DATA) $(srcdir)/skepp2.bmp $(DESTDIR)/usr/local/droidbattles/pixmaps/skepp2.bmp
#>- 	$(mkinstalldirs) /usr/local/droidbattles/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/pixmaps/
#>- 	$(INSTALL_DATA) $(srcdir)/skepp3.bmp /usr/local/droidbattles/pixmaps/skepp3.bmp
#>+ 1
	$(INSTALL_DATA) $(srcdir)/skepp3.bmp $(DESTDIR)/usr/local/droidbattles/pixmaps/skepp3.bmp
#>- 	$(mkinstalldirs) /usr/local/droidbattles/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/pixmaps/
#>- 	$(INSTALL_DATA) $(srcdir)/skepp4.bmp /usr/local/droidbattles/pixmaps/skepp4.bmp
#>+ 1
	$(INSTALL_DATA) $(srcdir)/skepp4.bmp $(DESTDIR)/usr/local/droidbattles/pixmaps/skepp4.bmp
#>- 	$(mkinstalldirs) /usr/local/droidbattles/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/pixmaps/
#>- 	$(INSTALL_DATA) $(srcdir)/skepp5.bmp /usr/local/droidbattles/pixmaps/skepp5.bmp
#>+ 1
	$(INSTALL_DATA) $(srcdir)/skepp5.bmp $(DESTDIR)/usr/local/droidbattles/pixmaps/skepp5.bmp
#>- 	$(mkinstalldirs) /usr/local/droidbattles/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/pixmaps/
#>- 	$(INSTALL_DATA) $(srcdir)/skepp6.bmp /usr/local/droidbattles/pixmaps/skepp6.bmp
#>+ 1
	$(INSTALL_DATA) $(srcdir)/skepp6.bmp $(DESTDIR)/usr/local/droidbattles/pixmaps/skepp6.bmp
#>- 	$(mkinstalldirs) /usr/local/droidbattles/pixmaps/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/pixmaps/
#>- 	$(INSTALL_DATA) $(srcdir)/skepp7.bmp /usr/local/droidbattles/pixmaps/skepp7.bmp
#>+ 1
	$(INSTALL_DATA) $(srcdir)/skepp7.bmp $(DESTDIR)/usr/local/droidbattles/pixmaps/skepp7.bmp
#>- 	$(mkinstalldirs) /usr/local/droidbattles/bots/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/bots/
#>- 	$(INSTALL_DATA) $(srcdir)/teamtracker.basm /usr/local/droidbattles/bots/teamtracker.basm
#>+ 1
	$(INSTALL_DATA) $(srcdir)/teamtracker.basm $(DESTDIR)/usr/local/droidbattles/bots/teamtracker.basm
#>- 	$(mkinstalldirs) /usr/local/droidbattles/
#>+ 1
	$(mkinstalldirs) $(DESTDIR)/usr/local/droidbattles/
#>- 	$(INSTALL_DATA) $(srcdir)/ultralight.cfg /usr/local/droidbattles/ultralight.cfg
#>+ 1
	$(INSTALL_DATA) $(srcdir)/ultralight.cfg $(DESTDIR)/usr/local/droidbattles/ultralight.cfg

uninstall-local:
#>- 	-rm -f /usr/local/droidbattles/pixmaps/backbutton.xpm
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/pixmaps/backbutton.xpm
#>- 	-rm -f /usr/local/droidbattles/pixmaps/chaff.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/pixmaps/chaff.bmp
#>- 	-rm -f /usr/local/droidbattles/current.cfg
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/current.cfg
#>- 	-rm -f /etc/droidbattles.conf
#>+ 1
	-rm -f $(DESTDIR)/etc/droidbattles.conf
#>- 	-rm -f /usr/local/droidbattles/bots/example1.basm
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/bots/example1.basm
#>- 	-rm -f /usr/local/droidbattles/heavy.cfg
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/heavy.cfg
#>- 	-rm -f /usr/local/droidbattles/light.cfg
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/light.cfg
#>- 	-rm -f /usr/local/droidbattles/pixmaps/mainmenu.png
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/pixmaps/mainmenu.png
#>- 	-rm -f /usr/local/droidbattles/pixmaps/missile.xpm
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/pixmaps/missile.xpm
#>- 	-rm -f /usr/local/droidbattles/pixmaps/radarmissile.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/pixmaps/radarmissile.bmp
#>- 	-rm -f /usr/local/droidbattles/pixmaps/skepp0.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/pixmaps/skepp0.bmp
#>- 	-rm -f /usr/local/droidbattles/pixmaps/skepp1.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/pixmaps/skepp1.bmp
#>- 	-rm -f /usr/local/droidbattles/pixmaps/skepp2.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/pixmaps/skepp2.bmp
#>- 	-rm -f /usr/local/droidbattles/pixmaps/skepp3.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/pixmaps/skepp3.bmp
#>- 	-rm -f /usr/local/droidbattles/pixmaps/skepp4.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/pixmaps/skepp4.bmp
#>- 	-rm -f /usr/local/droidbattles/pixmaps/skepp5.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/pixmaps/skepp5.bmp
#>- 	-rm -f /usr/local/droidbattles/pixmaps/skepp6.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/pixmaps/skepp6.bmp
#>- 	-rm -f /usr/local/droidbattles/pixmaps/skepp7.bmp
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/pixmaps/skepp7.bmp
#>- 	-rm -f /usr/local/droidbattles/bots/teamtracker.basm
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/bots/teamtracker.basm
#>- 	-rm -f /usr/local/droidbattles/ultralight.cfg
#>+ 1
	-rm -f $(DESTDIR)/usr/local/droidbattles/ultralight.cfg
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:


#>+ 3
createbot.moc.cpp: $(srcdir)/createbot.h
	$(MOC) $(srcdir)/createbot.h -o createbot.moc.cpp

#>+ 3
quickconf.moc.cpp: $(srcdir)/quickconf.h
	$(MOC) $(srcdir)/quickconf.h -o quickconf.moc.cpp

#>+ 3
confedit.moc.cpp: $(srcdir)/confedit.h
	$(MOC) $(srcdir)/confedit.h -o confedit.moc.cpp

#>+ 3
kothtournament.moc.cpp: $(srcdir)/kothtournament.h
	$(MOC) $(srcdir)/kothtournament.h -o kothtournament.moc.cpp

#>+ 3
startsbatt.moc.cpp: $(srcdir)/startsbatt.h
	$(MOC) $(srcdir)/startsbatt.h -o startsbatt.moc.cpp

#>+ 3
starttournament.moc.cpp: $(srcdir)/starttournament.h
	$(MOC) $(srcdir)/starttournament.h -o starttournament.moc.cpp

#>+ 3
robots.moc.cpp: $(srcdir)/robots.h
	$(MOC) $(srcdir)/robots.h -o robots.moc.cpp

#>+ 3
screenobject.moc.cpp: $(srcdir)/screenobject.h
	$(MOC) $(srcdir)/screenobject.h -o screenobject.moc.cpp

#>+ 3
botinfo.moc.cpp: $(srcdir)/botinfo.h
	$(MOC) $(srcdir)/botinfo.h -o botinfo.moc.cpp

#>+ 3
debugwindow.moc.cpp: $(srcdir)/debugwindow.h
	$(MOC) $(srcdir)/debugwindow.h -o debugwindow.moc.cpp

#>+ 3
droidbattles.moc.cpp: $(srcdir)/droidbattles.h
	$(MOC) $(srcdir)/droidbattles.h -o droidbattles.moc.cpp

#>+ 3
battlearea.moc.cpp: $(srcdir)/battlearea.h
	$(MOC) $(srcdir)/battlearea.h -o battlearea.moc.cpp

#>+ 3
devchoice.moc.cpp: $(srcdir)/devchoice.h
	$(MOC) $(srcdir)/devchoice.h -o devchoice.moc.cpp

#>+ 3
clean-metasources:
	-rm -f  createbot.moc.cpp quickconf.moc.cpp confedit.moc.cpp kothtournament.moc.cpp startsbatt.moc.cpp starttournament.moc.cpp robots.moc.cpp screenobject.moc.cpp botinfo.moc.cpp debugwindow.moc.cpp droidbattles.moc.cpp battlearea.moc.cpp devchoice.moc.cpp

#>+ 2
docs-am:

#>+ 6
force-reedit:
		cd $(top_srcdir) && \
	$(AUTOMAKE) --gnu  droidbattles/Makefile
	cd $(top_srcdir) && perl admin/am_edit droidbattles-1.0.6/droidbattles/Makefile.in


#>+ 11
droidbattles.all_cpp.cpp: $(srcdir)/Makefile.in  $(srcdir)/turret.cpp $(srcdir)/timedev.cpp $(srcdir)/textmodefilemanip.cpp $(srcdir)/textmodebattlearea.cpp $(srcdir)/steering.cpp $(srcdir)/starttournament.cpp $(srcdir)/startsurvbatt.cpp $(srcdir)/startsbatt.cpp $(srcdir)/startdeathbatt.cpp $(srcdir)/startcup.cpp $(srcdir)/shield.cpp $(srcdir)/screenobject.cpp $(srcdir)/scanner.cpp $(srcdir)/scandetect.cpp $(srcdir)/rocketlauncher.cpp $(srcdir)/rocket.cpp $(srcdir)/robots.cpp $(srcdir)/robcpu.cpp $(srcdir)/repair.cpp $(srcdir)/ram.cpp $(srcdir)/radarmissilelauncher.cpp $(srcdir)/radarmissile.cpp $(srcdir)/quickconf.cpp $(srcdir)/plasma.cpp $(srcdir)/pixmapholder.cpp $(srcdir)/pixbutton.cpp $(srcdir)/myqmultilineedit.cpp $(srcdir)/missile.cpp $(srcdir)/minelayer.cpp $(srcdir)/mine.cpp $(srcdir)/main.cpp $(srcdir)/kothtournament.cpp $(srcdir)/instruktion.cpp $(srcdir)/installdir.cpp $(srcdir)/infobox.cpp $(srcdir)/fuel.cpp $(srcdir)/explosion.cpp $(srcdir)/engine.cpp $(srcdir)/droidbattles.cpp $(srcdir)/docbrowser.cpp $(srcdir)/device.cpp $(srcdir)/devchoice.cpp $(srcdir)/debugwindow.cpp $(srcdir)/createbot.cpp $(srcdir)/cpu.cpp $(srcdir)/confedit.cpp $(srcdir)/communication.cpp $(srcdir)/cloaker.cpp $(srcdir)/chiller.cpp $(srcdir)/chafflauncher.cpp $(srcdir)/chaff.cpp $(srcdir)/botinfo.cpp $(srcdir)/beamer.cpp $(srcdir)/beam.cpp $(srcdir)/battlearea.cpp $(srcdir)/armor.cpp createbot.moc.cpp quickconf.moc.cpp confedit.moc.cpp kothtournament.moc.cpp startsbatt.moc.cpp starttournament.moc.cpp robots.moc.cpp botinfo.moc.cpp screenobject.moc.cpp debugwindow.moc.cpp droidbattles.moc.cpp devchoice.moc.cpp battlearea.moc.cpp 
	@echo 'creating droidbattles.all_cpp.cpp ...'; \
	rm -f droidbattles.all_cpp.files droidbattles.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> droidbattles.all_cpp.final; \
	for file in turret.cpp timedev.cpp textmodefilemanip.cpp textmodebattlearea.cpp steering.cpp starttournament.cpp startsurvbatt.cpp startsbatt.cpp startdeathbatt.cpp startcup.cpp shield.cpp screenobject.cpp scanner.cpp scandetect.cpp rocketlauncher.cpp rocket.cpp robots.cpp robcpu.cpp repair.cpp ram.cpp radarmissilelauncher.cpp radarmissile.cpp quickconf.cpp plasma.cpp pixmapholder.cpp pixbutton.cpp myqmultilineedit.cpp missile.cpp minelayer.cpp mine.cpp main.cpp kothtournament.cpp instruktion.cpp installdir.cpp infobox.cpp fuel.cpp explosion.cpp engine.cpp droidbattles.cpp docbrowser.cpp device.cpp devchoice.cpp debugwindow.cpp createbot.cpp cpu.cpp confedit.cpp communication.cpp cloaker.cpp chiller.cpp chafflauncher.cpp chaff.cpp botinfo.cpp beamer.cpp beam.cpp battlearea.cpp armor.cpp createbot.moc.cpp quickconf.moc.cpp confedit.moc.cpp kothtournament.moc.cpp startsbatt.moc.cpp starttournament.moc.cpp robots.moc.cpp botinfo.moc.cpp screenobject.moc.cpp debugwindow.moc.cpp droidbattles.moc.cpp devchoice.moc.cpp battlearea.moc.cpp ; do \
	  echo "#include \"$$file\"" >> droidbattles.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> droidbattles.all_cpp.final; \
	done; \
	cat droidbattles.all_cpp.final droidbattles.all_cpp.files > droidbattles.all_cpp.cpp; \
	rm -f droidbattles.all_cpp.final droidbattles.all_cpp.files

#>+ 3
clean-final:
	-rm -f droidbattles.all_cpp.cpp

#>+ 2
final:
	$(MAKE) droidbattles_OBJECTS="$(droidbattles_final_OBJECTS)" all-am
#>+ 2
final-install:
	$(MAKE) droidbattles_OBJECTS="$(droidbattles_final_OBJECTS)" install-am
#>+ 2
no-final:
	$(MAKE) droidbattles_OBJECTS="$(droidbattles_nofinal_OBJECTS)" all-am
#>+ 2
no-final-install:
	$(MAKE) droidbattles_OBJECTS="$(droidbattles_nofinal_OBJECTS)" install-am
#>+ 3
cvs-clean:
	$(MAKE) admindir=$(top_srcdir)/admin -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo
